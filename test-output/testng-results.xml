<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="70658" started-at="2016-11-02T11:27:11Z" finished-at="2016-11-02T11:28:22Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="70658" started-at="2016-11-02T11:27:11Z" finished-at="2016-11-02T11:28:22Z">
      <class name="com.kaviddiss.bootquartz.ApplicationTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.kaviddiss.bootquartz.ApplicationTest@f5acb9d]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="12" started-at="2016-11-02T16:57:11Z" finished-at="2016-11-02T16:57:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.kaviddiss.bootquartz.ApplicationTest@f5acb9d]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="8138" started-at="2016-11-02T16:57:11Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2016-11-02T16:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.kaviddiss.bootquartz.ApplicationTest@f5acb9d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="9" started-at="2016-11-02T16:57:20Z" finished-at="2016-11-02T16:57:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.kaviddiss.bootquartz.ApplicationTest.MisfireExample() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="MisfireExample()[pri:0, instance:com.kaviddiss.bootquartz.ApplicationTest@f5acb9d]" name="MisfireExample" duration-ms="62476" started-at="2016-11-02T16:57:20Z" finished-at="2016-11-02T16:58:22Z">
          <exception class="org.quartz.JobPersistenceException">
            <message>
              <![CDATA[Couldn't store job: JobDataMap values must be Strings when the 'useProperties' property is set.  Key of offending value: ExecutionDelay]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.quartz.JobPersistenceException: Couldn't store job: JobDataMap values must be Strings when the 'useProperties' property is set.  Key of offending value: ExecutionDelay [See nested exception: java.io.IOException: JobDataMap values must be Strings when the 'useProperties' property is set.  Key of offending value: ExecutionDelay]
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.storeJob(JobStoreSupport.java:1115)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$2.executeVoid(JobStoreSupport.java:1062)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$VoidTransactionCallback.execute(JobStoreSupport.java:3703)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$VoidTransactionCallback.execute(JobStoreSupport.java:3701)
	at org.quartz.impl.jdbcjobstore.JobStoreCMT.executeInLock(JobStoreCMT.java:245)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.storeJobAndTrigger(JobStoreSupport.java:1058)
	at org.quartz.core.QuartzScheduler.scheduleJob(QuartzScheduler.java:886)
	at org.quartz.impl.StdScheduler.scheduleJob(StdScheduler.java:249)
	at com.kaviddiss.bootquartz.examples.example5.MisfireExample.run(MisfireExample.java:81)
	at com.kaviddiss.bootquartz.ApplicationTest.MisfireExample(ApplicationTest.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:171)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
Caused by: java.io.IOException: JobDataMap values must be Strings when the 'useProperties' property is set.  Key of offending value: ExecutionDelay
	at org.quartz.impl.jdbcjobstore.StdJDBCDelegate.convertToProperty(StdJDBCDelegate.java:3158)
	at org.quartz.impl.jdbcjobstore.StdJDBCDelegate.serializeProperties(StdJDBCDelegate.java:3125)
	at org.quartz.impl.jdbcjobstore.StdJDBCDelegate.serializeJobData(StdJDBCDelegate.java:3077)
	at org.quartz.impl.jdbcjobstore.StdJDBCDelegate.insertJobDetail(StdJDBCDelegate.java:606)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.storeJob(JobStoreSupport.java:1112)
	... 40 more
]]>
            </full-stacktrace>
          </exception> <!-- org.quartz.JobPersistenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MisfireExample -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.kaviddiss.bootquartz.ApplicationTest@f5acb9d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="5" started-at="2016-11-02T16:58:22Z" finished-at="2016-11-02T16:58:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.kaviddiss.bootquartz.ApplicationTest.MisfireExample() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.kaviddiss.bootquartz.ApplicationTest@f5acb9d]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2016-11-02T16:58:22Z" finished-at="2016-11-02T16:58:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.kaviddiss.bootquartz.ApplicationTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
